{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","dagre-d3.core.js","lib/arrows.js","lib/create-clusters.js","lib/create-edge-labels.js","lib/create-edge-paths.js","lib/create-nodes.js","lib/intersect/index.js","lib/intersect/intersect-circle.js","lib/intersect/intersect-ellipse.js","lib/intersect/intersect-line.js","lib/intersect/intersect-node.js","lib/intersect/intersect-polygon.js","lib/intersect/intersect-rect.js","lib/label/add-html-label.js","lib/label/add-label.js","lib/label/add-svg-label.js","lib/label/add-text-label.js","lib/position-clusters.js","lib/position-edge-labels.js","lib/position-nodes.js","lib/render.js","lib/shapes.js","lib/util.js","lib/version.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dagreD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","graphlib","dagre","intersect","render","util","version","./lib/intersect","./lib/render","./lib/util","./lib/version","undefined","2","normal","parent","id","edge","type","marker","append","attr","path","style","applyStyle","vee","undirected","default","./util","3","createClusters","selection","clusters","nodes","filter","v","isSubgraph","svgClusters","selectAll","data","remove","enter","node","applyTransition","each","thisGroup","d3","select","labelGroup","addLabel","clusterLabelPos","c","domCluster","exit","./label/add-label","4","createEdgeLabels","svgEdgeLabels","edges","edgeToId","classed","label","bbox","getBBox","labelId","_","has","width","height","lodash","5","createEdgePaths","arrows","svgPaths","domEdge","elem","applyClass","arrowheadId","uniqueId","makeFragmentRef","location","href","calcPoints","arrowhead","url","fragmentId","baseUrl","split","tail","head","w","points","slice","unshift","intersectNode","push","createLine","line","svg","x","d","y","interpolate","lineInterpolate","tension","Number","lineTension","getCoords","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","svgPathsEnter","sourceElem","range","map","svgPathExit","source","getTotalLength","./intersect/intersect-node","6","createNodes","shapes","simpleNodes","svgNodes","labelDom","labelPos","shape","pick","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","7","circle","ellipse","polygon","rect","./intersect-circle","./intersect-ellipse","./intersect-node","./intersect-polygon","./intersect-rect","8","intersectCircle","rx","point","intersectEllipse","9","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","10","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","11","12","intersectPolygon","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","forEach","entry","min","left","top","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","console","log","./intersect-line","13","intersectRect","sx","sy","h","14","addHtmlLabel","root","fo","div","insert","html","labelStyle","client","getBoundingClientRect","../util","15","labelSvg","labelType","addSVGLabel","addTextLabel","labelBBox","./add-html-label","./add-svg-label","./add-text-label","16","domNode","appendChild","17","lines","processEscapeSequences","text","ch","newText","escaped","18","positionClusters","created","19","positionEdgeLabels","20","positionNodes","21","fn","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","postProcessGraph","value","arguments","children","defaults","paddingX","paddingY","padding","NODE_DEFAULT_ATTRS","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","name","empty","./arrows","./create-clusters","./create-edge-labels","./create-edge-paths","./create-nodes","./position-clusters","./position-edge-labels","./position-nodes","./shapes","22","max","diamond","SQRT2","join","./intersect/intersect-circle","./intersect/intersect-ellipse","./intersect/intersect-polygon","./intersect/intersect-rect","23","escapeId","str","String","replace","ID_DELIM","dom","styleFn","classFn","otherClasses","graph","isPlainObject","transition","isFunction","24"],"mappings":"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","file":"dagre-d3.core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"graphlib\"),\n  dagre: require(\"dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dagreD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"graphlib\"),\n  dagre: require(\"dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/intersect\":7,\"./lib/render\":21,\"./lib/util\":23,\"./lib/version\":24,\"dagre\":undefined,\"graphlib\":undefined}],2:[function(require,module,exports){\nvar util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\n},{\"./util\":23}],3:[function(require,module,exports){\nvar util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    d3.select(this).append(\"rect\");\n    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n\n},{\"./label/add-label\":15,\"./util\":23}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n\n},{\"./label/add-label\":15,\"./util\":23,\"d3\":undefined,\"lodash\":undefined}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n\n},{\"./intersect/intersect-node\":11,\"./util\":23,\"d3\":undefined,\"lodash\":undefined}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node, node.labelPos),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n\n},{\"./label/add-label\":15,\"./util\":23,\"d3\":undefined,\"lodash\":undefined}],7:[function(require,module,exports){\nmodule.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n\n},{\"./intersect-circle\":8,\"./intersect-ellipse\":9,\"./intersect-node\":11,\"./intersect-polygon\":12,\"./intersect-rect\":13}],8:[function(require,module,exports){\nvar intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse\":9}],9:[function(require,module,exports){\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n\n},{}],10:[function(require,module,exports){\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n},{}],11:[function(require,module,exports){\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n},{}],12:[function(require,module,exports){\nvar intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n\n},{\"./intersect-line\":10}],13:[function(require,module,exports){\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n\n},{}],14:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var client = div[0][0].getBoundingClientRect();\n  fo\n    .attr(\"width\", client.width)\n    .attr(\"height\", client.height); \n\n  return fo;\n}\n\n},{\"../util\":23}],15:[function(require,module,exports){\nvar addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2) + (-labelBBox.height / 2) - 6;\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - (labelBBox.height / 2) + 6;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n\n},{\"./add-html-label\":14,\"./add-svg-label\":16,\"./add-text-label\":17}],16:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n},{\"../util\":23}],17:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n},{\"../util\":23}],18:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n\n},{\"./util\":23,\"d3\":undefined}],19:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\"),\n    _ = require(\"lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./util\":23,\"d3\":undefined,\"lodash\":undefined}],20:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./util\":23,\"d3\":undefined}],21:[function(require,module,exports){\nvar _ = require(\"lodash\"),\n    layout = require(\"dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\n},{\"./arrows\":2,\"./create-clusters\":3,\"./create-edge-labels\":4,\"./create-edge-paths\":5,\"./create-nodes\":6,\"./position-clusters\":18,\"./position-edge-labels\":19,\"./position-nodes\":20,\"./shapes\":22,\"dagre\":undefined,\"lodash\":undefined}],22:[function(require,module,exports){\n\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle\":8,\"./intersect/intersect-ellipse\":9,\"./intersect/intersect-polygon\":12,\"./intersect/intersect-rect\":13}],23:[function(require,module,exports){\nvar _ = require(\"lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n},{\"lodash\":undefined}],24:[function(require,module,exports){\nmodule.exports = \"0.4.18-pre\";\n\n},{}]},{},[1])(1)\n});\n\n","var util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n","var util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    d3.select(this).append(\"rect\");\n    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n","\"use strict\";\n\nvar _ = require(\"lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n","\"use strict\";\n\nvar _ = require(\"lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n","\"use strict\";\n\nvar _ = require(\"lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node, node.labelPos),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n","module.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n","var intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","module.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n","module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","module.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","var intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n","module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n","var util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var client = div[0][0].getBoundingClientRect();\n  fo\n    .attr(\"width\", client.width)\n    .attr(\"height\", client.height); \n\n  return fo;\n}\n","var addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2) + (-labelBBox.height / 2) - 6;\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - (labelBBox.height / 2) + 6;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\"),\n    _ = require(\"lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","var _ = require(\"lodash\"),\n    layout = require(\"dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n","\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","var _ = require(\"lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","module.exports = \"0.4.18-pre\";\n"]}